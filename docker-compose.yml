services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    env_file:
      - .env
    restart: always

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8800
    #    command: uvicorn backend.asgi:application --host 0.0.0.0 --port 8800 --workers 4
    volumes:
      - ./backend:/app
    ports:
      - "8800:8800"
    depends_on:
      - db
    env_file:
      - .env
    restart: always

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .env.local
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443" # Expose port 443 for HTTPS
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/letsencrypt # Mount the certs directory
    depends_on:
      - backend
      - frontend
      - db

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt # Shared volume for certificates
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Ensure it has access to the Nginx config
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  postgres_data:
