server {
    listen 80;
    server_name localhost;
    # Backend API location
    location /djangoapi/ {
        proxy_pass http://backend:8800/;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie handling
        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / /;  # Ensure cookies are forwarded correctly
        
        # WebSocket support if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Buffer settings for larger requests
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        # CORS headers
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,X-CSRFToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,X-CSRFToken' always;
            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        # Handle custom redirect and set cookies
        proxy_redirect off;
        proxy_intercept_errors on;
        error_page 301 302 303 307 = @handle_redirect;
    }
    # Custom location to handle redirects and set cookies
    location @handle_redirect {
        # Preserve original cookies and add new ones
        proxy_pass_header Set-Cookie;
        add_header Set-Cookie $upstream_http_set_cookie;
        
        # Use X-Accel-Redirect if present, otherwise use Location header
        set $redirect_uri $upstream_http_x_accel_redirect;
        if ($redirect_uri = "") {
            set $redirect_uri $upstream_http_location;
        }
        
        # Perform the redirect while preserving cookies
        return 307 $redirect_uri;
    }
    # Frontend location
    location / {
        proxy_pass http://frontend:3000;
        
        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie handling
        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / /;
        
        # WebSocket support for development servers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Development-specific headers
        proxy_set_header X-Forwarded-Host $host;
    }
}